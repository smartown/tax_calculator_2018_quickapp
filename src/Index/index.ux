<template>
  <div class='content'>
    <div class='section'>
      <block for='fixedItems'>
        <div class='edit-item' onclick='focus($item.title)'>
          <text class='edit-item-title'>{{$item.title}}</text>
          <input id={{$item.title}} type='number' placeholder='请输入' maxlength={{$item.maxLength}} value={{$item.value}} onchange='onValueChange($item)'></input>
        </div>
      </block>
    </div>
    <div class='section margin-top' if='{{checkedCount>0}}'>
      <block for='checkItems'>
        <div class='edit-item' if='{{$item.isCheck}}' onclick='focus($item.title)'>
          <text class='edit-item-title'>{{$item.title}}</text>
          <input id={{$item.title}} type='number' placeholder='请输入' maxlength={{$item.maxLength}} value={{$item.value}} onchange='onValueChange($item)'></input>
        </div>
      </block>
    </div>
    <div class='button margin-top' onclick='addItem'>
      <text class='button-text'>添加专项附加扣除</text>
    </div>
    <div class='float-button' onclick='checkInput'>
      <image class='float-button-icon' src='/Common/calculate.png'></image>
    </div>
  </div>
</template>
<style>
.margin-top {
  margin-top: 32px;
}
.content {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  padding: 32px;
}
.section {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  background-color: white;
  padding-left: 32px;
  padding-right: 32px;
}
.float-button {
  position: fixed;
  right: 32px;
  bottom: 32px;
  width: 128px;
  height: 128px;
  border-radius: 64px;
  background-color: #59d0cf;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.float-button-icon {
  width: 64px;
  height: 64px;
  resize-mode: contain;
}
.button {
  align-items: center;
  justify-content: center;
  height: 96px;
  background: linear-gradient(to right, #ff8755, #ff365d);
  border-radius: 8px;
}
.button-text {
  font-size: 32px;
  color: white;
}
.edit-item {
  height: 112px;
  flex-direction: row;
  align-items: center;
  border-bottom-color: #eee;
  border-bottom-width: 1px;
}
.edit-item-title {
  font-size: 32px;
  color: #999;
}
.edit-item-value {
  font-size: 32px;
  color: #999;
}
input {
  flex: 1;
  text-align: right;
  font-size: 32px;
  color: #1e2747;
  placeholder-color: #ccc;
}
</style>
<script>
import router from '@system.router'
import prompt from '@system.prompt'
export default {
  private: {
    fixedItems: [
      { title: '税前月薪', maxLength: 10, value: undefined },
      { title: '社保个人缴纳', maxLength: 10, value: undefined },
      { title: '公积金个人缴纳', maxLength: 10, value: undefined }
    ]
  },
  protected: {
    checkItems: [
      { title: '子女教育', maxLength: 4, isCheck: false, value: undefined },
      { title: '继续教育', maxLength: 4, isCheck: false, value: undefined },
      { title: '大病医疗', maxLength: 4, isCheck: false, value: undefined },
      { title: '住房贷款利息', maxLength: 4, isCheck: false, value: undefined },
      { title: '住房租金', maxLength: 4, isCheck: false, value: undefined },
      { title: '赡养老人', maxLength: 4, isCheck: false, value: undefined }],
    checkedCount: 0
  },
  onShow() {
    const data = this.$app.getValue('checkItems');
    if (data) {
      this.checkItems = data.checkItems;
      this.checkedCount = data.checkedCount;
    }
  },
  addItem() {
    router.push({
      uri: '/AddItem',
      params: {
        checkItems: this.checkItems,
        checkedCount: this.checkedCount
      }
    })
  },
  focus(id) {
    this.$element(id).focus();
  },
  onValueChange(item, e) {
    item.value = e.value;
  },
  checkInput() {
    const params = {};
    for (const element of this.fixedItems) {
      if (!element.value) {
        prompt.showToast({ message: '请输入' + element.title })
        return;
      }
      params[element.title] = parseFloat(element.value);
    }
    let 专项附加扣除 = 0;
    for (const element of this.checkItems) {
      if (element.isCheck) {
        if (!element.value) {
          prompt.showToast({ message: '请输入' + element.title + '扣除金额' })
          return;
        }
        const value = parseInt(element.value);
        专项附加扣除 += value;
        params[element.title] = value;
      }
    }
    params["专项附加扣除"] = 专项附加扣除;
    router.push({
      uri: '/Result',
      params: {
        params: params
      }
    })
  }
}
</script>